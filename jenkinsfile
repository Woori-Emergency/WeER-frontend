pipeline {
    agent any

    environment {
        ENV_VARS = credentials('react-env-vars')
        CI = 'false'
        FEGITHUB = credentials('fe-github')
        AWS_CREDENTIAL = credentials('aws-credentials')
        SONAR_CREDENTIAL = credentials('fe-jenkins-token')

    }

    stages {
        stage('Git Clone') {
            steps {
                git(
                    url: env.FEGITHUB,
                    branch: 'feat/91'
                )
            }
        }

        stage('Prepare Environment') {
            steps {
                script {
                    def envContent = readFile(file: env.ENV_VARS)
                    writeFile file: '.env', text: envContent
                    sh 'ls -la .env'
                }
            }
        }

        stage('React Build') {
            tools {
                nodejs '18.3.1'
            }
            steps {
                dir('FE pipeline') {
                    sh 'CI=false npm install'
                    sh 'CI=false npm run build'
                }
            }
        }

stage('sonarqube') {
    steps {
        script {
            def scannerHome = tool 'sonarqube'
            withSonarQubeEnv('SonarServer') {  // credentialsId 제거
                sh "${scannerHome}/bin/sonar-scanner"
            }
        }
        script {
            timeout(time: 1, unit: 'HOURS') {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            }
        }
    }
}
    }

    post {
        always {
            echo 'Cleaning up workspace'
        }
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build or deployment failed'
        }
    }
}
