Index: src/components/common/Header.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FaUserCircle } from 'react-icons/fa';\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 40px;\n  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.1);\n  background-color: white;\n`;\n\nconst LogoContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst LogoImage = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n`;\n\nconst LogoText = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n  line-height: 1.2;\n`;\n\nconst Subtitle = styled.div`\n  font-size: 12px;\n  color: #666;\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  align-items: center;\n`;\n\nconst NavItem = styled(Link)`\n  font-size: 16px;\n  color: #333;\n  text-decoration: none;\n  margin: 0 15px;\n  position: relative;\n  font-weight: ${(props) => (props.active ? 'bold' : 'normal')};\n  color: ${(props) => (props.active ? '#007bff' : '#333')};\n\n  &:hover {\n    color: #007bff;\n  }\n`;\n\nconst LoginButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  background: #f5f7fa;\n  padding: 8px 12px;\n  border-radius: 20px;\n  text-decoration: none;\n  color: #333;\n  font-size: 16px;\n  font-weight: 500;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #e2e6ea;\n  }\n`;\n\nconst LoginIcon = styled(FaUserCircle)`\n  margin-right: 5px;\n  font-size: 20px;\n  color: #333;\n`;\n\n\nfunction Header() {\n  const location = useLocation();\n\n  return (\n    <HeaderContainer>\n      <LogoContainer>\n        <LogoImage src=\"/weer_logo.png\" alt=\"Logo\" />\n        <div>\n          <LogoText>Emergency</LogoText>\n          <Subtitle>실시간 응급실 예약 서비스</Subtitle>\n        </div>\n      </LogoContainer>\n      \n      <Nav>\n        <NavItem to=\"/\" active={location.pathname === \"/\"}>메인</NavItem>\n        <NavItem to=\"/my-booking-requests\" active={location.pathname === \"/my-booking-requests\"}>\n          예약 확인\n        </NavItem>\n        <NavItem to=\"/patient-status-list\" active={location.pathname === \"/patient-status-list\"}>\n          환자 상태 내역\n        </NavItem>\n        <LoginButton to=\"/login\">\n          <LoginIcon />\n          로그인\n        </LoginButton>\n      </Nav>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/common/Header.js b/src/components/common/Header.js
--- a/src/components/common/Header.js	(revision b0cc7dc9cd5532ac39d17e44808c577962cbb950)
+++ b/src/components/common/Header.js	(date 1731295333690)
@@ -18,21 +18,9 @@
 `;
 
 const LogoImage = styled.img`
-  width: 40px;
-  height: 40px;
-  margin-right: 10px;
-`;
-
-const LogoText = styled.div`
-  font-size: 18px;
-  font-weight: bold;
-  color: #333;
-  line-height: 1.2;
-`;
-
-const Subtitle = styled.div`
-  font-size: 12px;
-  color: #666;
+  width: 130px;
+  height: 50px;
+  margin-right: 5px;
 `;
 
 const Nav = styled.nav`
@@ -78,18 +66,16 @@
   color: #333;
 `;
 
-
 function Header() {
   const location = useLocation();
 
   return (
     <HeaderContainer>
       <LogoContainer>
-        <LogoImage src="/weer_logo.png" alt="Logo" />
-        <div>
-          <LogoText>Emergency</LogoText>
-          <Subtitle>실시간 응급실 예약 서비스</Subtitle>
-        </div>
+        {/* 로고 이미지를 Link로 감싸 메인 페이지로 이동 */}
+        <Link to="/">
+          <LogoImage src="/weer_logo.png" alt="Logo" />
+        </Link>
       </LogoContainer>
       
       <Nav>
@@ -109,4 +95,4 @@
   );
 }
 
-export default Header;
+export default Header;
\ No newline at end of file
Index: src/pages/admin/AdminUserListPage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/admin/AdminUserListPage.jsx b/src/pages/admin/AdminUserListPage.jsx
--- a/src/pages/admin/AdminUserListPage.jsx	(revision b0cc7dc9cd5532ac39d17e44808c577962cbb950)
+++ b/src/pages/admin/AdminUserListPage.jsx	(date 1731295277089)
@@ -1,0 +1,93 @@
+import React, { useState, useEffect } from 'react';
+import styled from 'styled-components';
+import UserTable from '../../components/admin/UserTable';
+import SearchBar from '../../components/admin/SearchBar';
+
+const PageContainer = styled.div`
+  padding: 20px;
+  max-width: 1200px;
+  margin: 0 auto;
+`;
+
+const ControlsContainer = styled.div`
+  display: flex;
+  gap: 10px;
+  margin-bottom: 20px;
+`;
+
+function AdminUserListPage() {
+  const [users, setUsers] = useState([]);
+  const [currentPage, setCurrentPage] = useState(1);
+  const [search, setSearch] = useState("");
+  const [selectedUserIds, setSelectedUserIds] = useState([]);
+  const [isModalOpen, setIsModalOpen] = useState(false);
+  const [editingUser, setEditingUser] = useState(null);
+
+  const itemsPerPage = 5;
+
+  useEffect(() => {
+    fetch('http://localhost:8080/user/list')
+      .then(response => {
+        if (!response.ok) {
+          throw new Error("Failed to fetch user list");
+        }
+        return response.json();
+      })
+      .then(data => {
+        console.log("Fetched users:", data); // 데이터 로깅
+        setUsers(data);
+      })
+      .catch(error => console.error("Error fetching users:", error));
+  }, []);
+
+  const handleOpenEditModal = () => {
+    if (selectedUserIds.length === 1) {
+      const user = users.find((u) => u.id === selectedUserIds[0]);
+      setEditingUser(user);
+      setIsModalOpen(true);
+    } else {
+      alert("수정할 사용자를 한 명만 선택해주세요.");
+    }
+  };
+
+  const handleSaveUser = (updatedData) => {
+    fetch(`http://localhost:8080/user/update/${editingUser.id}`, {
+      method: 'PUT',
+      headers: { 'Content-Type': 'application/json' },
+      body: JSON.stringify(updatedData),
+    })
+      .then(response => {
+        if (!response.ok) throw new Error("Failed to update user");
+        return response.json();
+      })
+      .then((updatedUser) => {
+        console.log("Updated user:", updatedUser); // 업데이트된 데이터 로깅
+        setUsers(users.map(user => user.id === updatedUser.id ? updatedUser : user));
+        setIsModalOpen(false);
+        setSelectedUserIds([]); // 수정 후 선택 해제
+      })
+      .catch(error => console.error("Error updating user:", error));
+  };
+
+  const displayedUsers = users.slice(
+    (currentPage - 1) * itemsPerPage,
+    currentPage * itemsPerPage
+  );
+
+  const totalPages = Math.ceil(users.length / itemsPerPage);
+
+  return (
+    <PageContainer>
+      <ControlsContainer>
+        <SearchBar search={search} onSearchChange={setSearch} onSearch={() => setCurrentPage(1)} />
+      </ControlsContainer>
+      <UserTable 
+        users={displayedUsers} 
+        selectedUserIds={selectedUserIds} 
+        setSelectedUserIds={setSelectedUserIds} 
+      />      
+    </PageContainer>
+  );
+}
+
+export default AdminUserListPage;
\ No newline at end of file
Index: src/pages/admin/AdminDashboardPage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/admin/AdminDashboardPage.jsx b/src/pages/admin/AdminDashboardPage.jsx
--- a/src/pages/admin/AdminDashboardPage.jsx	(revision b0cc7dc9cd5532ac39d17e44808c577962cbb950)
+++ b/src/pages/admin/AdminDashboardPage.jsx	(date 1731295279062)
@@ -1,0 +1,73 @@
+import React, { useState, useEffect } from 'react';
+import styled from 'styled-components';
+
+const PageContainer = styled.div`
+  padding: 20px;
+`;
+
+const DashboardContainer = styled.div`
+  display: flex;
+  flex-direction: column;
+  gap: 20px;
+  margin-top: 20px;
+`;
+
+const StatBox = styled.div`
+  background-color: #f8f9fa;
+  padding: 20px;
+  border-radius: 8px;
+  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
+  text-align: center;
+`;
+
+const StatTitle = styled.h2`
+  font-size: 16px;
+  color: #333;
+`;
+
+const StatValue = styled.p`
+  font-size: 24px;
+  font-weight: bold;
+  color: #007bff;
+`;
+
+function AdminDashboardPage() {
+  const [stats, setStats] = useState({
+    totalUsers: 0,
+    recentSignups: 0,
+    pendingRequests: 0
+  });
+
+  // 대시보드 데이터 가져오기
+  useEffect(() => {
+    fetch('/user/dashboard')
+      .then(response => response.json())
+      .then(data => setStats({
+        totalUsers: data.totalUsers,
+        recentSignups: data.recentSignups,
+        pendingRequests: data.pendingRequests
+      }))
+      .catch(error => console.error("Error fetching dashboard data:", error));
+  }, []);
+
+  return (
+    <PageContainer>
+      <DashboardContainer>
+        <StatBox>
+          <StatTitle>총 회원 수</StatTitle>
+          <StatValue>{stats.totalUsers}</StatValue>
+        </StatBox>
+        <StatBox>
+          <StatTitle>최근 가입자 수</StatTitle>
+          <StatValue>{stats.recentSignups}</StatValue>
+        </StatBox>
+        <StatBox>
+          <StatTitle>승인 대기 요청</StatTitle>
+          <StatValue>{stats.pendingRequests}</StatValue>
+        </StatBox>
+      </DashboardContainer>
+    </PageContainer>
+  );
+}
+
+export default AdminDashboardPage;
\ No newline at end of file
Index: src/pages/admin/AdminApprovalPage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/admin/AdminApprovalPage.jsx b/src/pages/admin/AdminApprovalPage.jsx
--- a/src/pages/admin/AdminApprovalPage.jsx	(revision b0cc7dc9cd5532ac39d17e44808c577962cbb950)
+++ b/src/pages/admin/AdminApprovalPage.jsx	(date 1731295281137)
@@ -1,0 +1,87 @@
+// src/pages/admin/AdminApprovalPage.jsx
+import React, { useState, useEffect } from 'react';
+import { message } from 'antd';
+import styled from 'styled-components';
+import ApprovalTable from '../../components/admin/ApprovalTable';
+
+// ApprovalTable을 감싸는 컨테이너에 여백 추가
+const Container = styled.div`
+  padding: 20px 40px;
+  margin-top: 10px; // 헤더와의 간격
+`;
+
+const AdminApprovalPage = () => {
+  const [data, setData] = useState([]);
+  const [loading, setLoading] = useState(true);
+
+  // 데이터 가져오기
+  useEffect(() => {
+    const fetchRequests = async () => {
+      try {
+        const response = await fetch('http://localhost:8080/user/signup-requests');
+        if (!response.ok) throw new Error('Failed to fetch data');
+        const result = await response.json();
+
+        // approved 필드를 상태에 반영하여 변환
+        const formattedData = result.map((user) => ({
+          key: user.userId,
+          name: user.name,
+          loginId: user.loginId,
+          email: user.email,
+          organization: user.organization,
+          certificate: user.certificate,
+          createdAt: user.createdAt,
+          status: user.approved ? '승인됨' : '대기중', // approved에 따라 상태 표시
+        }));
+
+        setData(formattedData);
+        setLoading(false);
+      } catch (error) {
+        console.error("Error fetching signup requests:", error);
+        setLoading(false);
+      }
+    };
+
+    fetchRequests();
+  }, []);
+
+  // 개별 사용자 승인 또는 반려 요청 처리
+  const handleApproval = async (userId, approve) => {
+    try {
+      const response = await fetch(`http://localhost:8080/user/approve-signup/${userId}?approve=${approve}`, {
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json' },
+      });
+
+      if (!response.ok) {
+        const errorResult = await response.json();
+        throw new Error(errorResult.error || 'Failed to update status');
+      }
+
+      const result = await response.json();
+
+      // approved에 따라 상태 업데이트
+      setData((prevData) =>
+        prevData.map((user) =>
+          user.key === userId ? { ...user, status: approve ? '승인됨' : '반려됨' } : user
+        )
+      );
+      message.success(result.message);
+    } catch (error) {
+      console.error('Error updating status:', error);
+      message.error(error.message || 'Failed to update user status');
+    }
+  };
+
+  return (
+    <Container>
+      <ApprovalTable
+        data={data}
+        loading={loading}
+        onStatusChange={handleApproval}  // 승인 및 반려 처리 함수 전달
+      />
+    </Container>
+  );
+};
+
+export default AdminApprovalPage;
\ No newline at end of file
